# -*- coding: utf-8 -*-
"""get-data-el.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16ZSIKkIyoIpWtQmYkuetLTeQgTZUWyMJ
"""

pip install psycopg2-binary
pip install jupyterlab_code_formatter
pip install pandas scikit-learn psycopg2-binary

pip install typing
pip install SQLalchemy

import orchest
import pandas as pd 
from sklearn import datasets

import os
import urllib.parse as up
import psycopg2

# create connection
up.uses_netloc.append("postgres")
url = up.urlparse("postgres://qnjzgrsy:OXyNrqQTXQLU2F5fyzHR4cHdFXmY1tx7@rosie.db.elephantsql.com/qnjzgrsy")
conn = psycopg2.connect(database=url.path[1:], user=url.username, password=url.password, 
                        host=url.hostname, port=url.port)

import sqlalchemy as db
from sqlalchemy import create_engine

# get table from ElephantSQL
engine = create_engine("postgres://qnjzgrsy:OXyNrqQTXQLU2F5fyzHR4cHdFXmY1tx7@rosie.db.elephantsql.com/qnjzgrsy")
connection = engine.connect()
metadata = db.MetaData()
iris_data = db.Table('iris_data', metadata, autoload=True, autoload_with=engine)
elephantsql_db = db.Table('iris_data', metadata, autoload=True, autoload_with=engine)

query = db.select([elephantsql_db.columns.id, elephantsql_db.columns.sepal_width])
results = connection.execute(query).fetchall()
df = pd.DataFrame(results)
df.columns = results[0].keys()
df.head(5)

